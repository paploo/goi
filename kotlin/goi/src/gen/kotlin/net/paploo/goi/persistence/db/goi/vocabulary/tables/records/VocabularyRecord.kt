/*
 * This file is generated by jOOQ.
 */
package net.paploo.goi.persistence.db.goi.vocabulary.tables.records


import java.time.LocalDate
import java.util.UUID

import net.paploo.goi.persistence.db.goi.vocabulary.tables.Vocabulary

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class VocabularyRecord() : UpdatableRecordImpl<VocabularyRecord>(Vocabulary.VOCABULARY_), Record7<UUID?, String?, String?, Int?, Int?, LocalDate?, Array<String?>?> {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var wordClassCode: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var conjugationKindCode: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var jlptLevel: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var rowNum: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var dateAdded: LocalDate?
        set(value): Unit = set(5, value)
        get(): LocalDate? = get(5) as LocalDate?

    open var tags: Array<String?>?
        set(value): Unit = set(6, value)
        get(): Array<String?>? = get(6) as Array<String?>?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<UUID?, String?, String?, Int?, Int?, LocalDate?, Array<String?>?> = super.fieldsRow() as Row7<UUID?, String?, String?, Int?, Int?, LocalDate?, Array<String?>?>
    override fun valuesRow(): Row7<UUID?, String?, String?, Int?, Int?, LocalDate?, Array<String?>?> = super.valuesRow() as Row7<UUID?, String?, String?, Int?, Int?, LocalDate?, Array<String?>?>
    override fun field1(): Field<UUID?> = Vocabulary.VOCABULARY_.ID
    override fun field2(): Field<String?> = Vocabulary.VOCABULARY_.WORD_CLASS_CODE
    override fun field3(): Field<String?> = Vocabulary.VOCABULARY_.CONJUGATION_KIND_CODE
    override fun field4(): Field<Int?> = Vocabulary.VOCABULARY_.JLPT_LEVEL
    override fun field5(): Field<Int?> = Vocabulary.VOCABULARY_.ROW_NUM
    override fun field6(): Field<LocalDate?> = Vocabulary.VOCABULARY_.DATE_ADDED
    override fun field7(): Field<Array<String?>?> = Vocabulary.VOCABULARY_.TAGS
    override fun component1(): UUID? = id
    override fun component2(): String? = wordClassCode
    override fun component3(): String? = conjugationKindCode
    override fun component4(): Int? = jlptLevel
    override fun component5(): Int? = rowNum
    override fun component6(): LocalDate? = dateAdded
    override fun component7(): Array<String?>? = tags
    override fun value1(): UUID? = id
    override fun value2(): String? = wordClassCode
    override fun value3(): String? = conjugationKindCode
    override fun value4(): Int? = jlptLevel
    override fun value5(): Int? = rowNum
    override fun value6(): LocalDate? = dateAdded
    override fun value7(): Array<String?>? = tags

    override fun value1(value: UUID?): VocabularyRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): VocabularyRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): VocabularyRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Int?): VocabularyRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Int?): VocabularyRecord {
        set(4, value)
        return this
    }

    override fun value6(value: LocalDate?): VocabularyRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Array<String?>?): VocabularyRecord {
        set(6, value)
        return this
    }

    override fun values(value1: UUID?, value2: String?, value3: String?, value4: Int?, value5: Int?, value6: LocalDate?, value7: Array<String?>?): VocabularyRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised VocabularyRecord
     */
    constructor(id: UUID? = null, wordClassCode: String? = null, conjugationKindCode: String? = null, jlptLevel: Int? = null, rowNum: Int? = null, dateAdded: LocalDate? = null, tags: Array<String?>? = null): this() {
        this.id = id
        this.wordClassCode = wordClassCode
        this.conjugationKindCode = conjugationKindCode
        this.jlptLevel = jlptLevel
        this.rowNum = rowNum
        this.dateAdded = dateAdded
        this.tags = tags
        resetChangedOnNotNull()
    }
}
