/*
 * This file is generated by jOOQ.
 */
package net.paploo.goi.persistence.db.goi.grammar.tables.records


import java.util.UUID

import net.paploo.goi.persistence.db.goi.grammar.tables.Example

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ExampleRecord() : UpdatableRecordImpl<ExampleRecord>(Example.EXAMPLE), Record8<UUID?, UUID?, String?, String?, String?, String?, Int?, Array<String?>?> {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var ruleId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var meaning: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var textPreferredSpelling: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var textPhoneticSpelling: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var textFuriganaTemplate: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var sortRank: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var tags: Array<String?>?
        set(value): Unit = set(7, value)
        get(): Array<String?>? = get(7) as Array<String?>?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<UUID?, UUID?, String?, String?, String?, String?, Int?, Array<String?>?> = super.fieldsRow() as Row8<UUID?, UUID?, String?, String?, String?, String?, Int?, Array<String?>?>
    override fun valuesRow(): Row8<UUID?, UUID?, String?, String?, String?, String?, Int?, Array<String?>?> = super.valuesRow() as Row8<UUID?, UUID?, String?, String?, String?, String?, Int?, Array<String?>?>
    override fun field1(): Field<UUID?> = Example.EXAMPLE.ID
    override fun field2(): Field<UUID?> = Example.EXAMPLE.RULE_ID
    override fun field3(): Field<String?> = Example.EXAMPLE.MEANING
    override fun field4(): Field<String?> = Example.EXAMPLE.TEXT_PREFERRED_SPELLING
    override fun field5(): Field<String?> = Example.EXAMPLE.TEXT_PHONETIC_SPELLING
    override fun field6(): Field<String?> = Example.EXAMPLE.TEXT_FURIGANA_TEMPLATE
    override fun field7(): Field<Int?> = Example.EXAMPLE.SORT_RANK
    override fun field8(): Field<Array<String?>?> = Example.EXAMPLE.TAGS
    override fun component1(): UUID? = id
    override fun component2(): UUID? = ruleId
    override fun component3(): String? = meaning
    override fun component4(): String? = textPreferredSpelling
    override fun component5(): String? = textPhoneticSpelling
    override fun component6(): String? = textFuriganaTemplate
    override fun component7(): Int? = sortRank
    override fun component8(): Array<String?>? = tags
    override fun value1(): UUID? = id
    override fun value2(): UUID? = ruleId
    override fun value3(): String? = meaning
    override fun value4(): String? = textPreferredSpelling
    override fun value5(): String? = textPhoneticSpelling
    override fun value6(): String? = textFuriganaTemplate
    override fun value7(): Int? = sortRank
    override fun value8(): Array<String?>? = tags

    override fun value1(value: UUID?): ExampleRecord {
        set(0, value)
        return this
    }

    override fun value2(value: UUID?): ExampleRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): ExampleRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): ExampleRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): ExampleRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): ExampleRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Int?): ExampleRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Array<String?>?): ExampleRecord {
        set(7, value)
        return this
    }

    override fun values(value1: UUID?, value2: UUID?, value3: String?, value4: String?, value5: String?, value6: String?, value7: Int?, value8: Array<String?>?): ExampleRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised ExampleRecord
     */
    constructor(id: UUID? = null, ruleId: UUID? = null, meaning: String? = null, textPreferredSpelling: String? = null, textPhoneticSpelling: String? = null, textFuriganaTemplate: String? = null, sortRank: Int? = null, tags: Array<String?>? = null): this() {
        this.id = id
        this.ruleId = ruleId
        this.meaning = meaning
        this.textPreferredSpelling = textPreferredSpelling
        this.textPhoneticSpelling = textPhoneticSpelling
        this.textFuriganaTemplate = textFuriganaTemplate
        this.sortRank = sortRank
        this.tags = tags
        resetChangedOnNotNull()
    }
}
