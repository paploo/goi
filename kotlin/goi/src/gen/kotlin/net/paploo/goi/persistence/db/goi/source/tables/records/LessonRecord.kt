/*
 * This file is generated by jOOQ.
 */
package net.paploo.goi.persistence.db.goi.source.tables.records


import net.paploo.goi.persistence.db.goi.source.tables.Lesson

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class LessonRecord() : UpdatableRecordImpl<LessonRecord>(Lesson.LESSON), Record8<String?, String?, String?, String?, Int?, Int?, String?, String?> {

    open var code: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var lessonCode: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var sourceCode: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var label: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var sectionNumber: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var subsectionNumber: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var url: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var description: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<String?, String?, String?, String?, Int?, Int?, String?, String?> = super.fieldsRow() as Row8<String?, String?, String?, String?, Int?, Int?, String?, String?>
    override fun valuesRow(): Row8<String?, String?, String?, String?, Int?, Int?, String?, String?> = super.valuesRow() as Row8<String?, String?, String?, String?, Int?, Int?, String?, String?>
    override fun field1(): Field<String?> = Lesson.LESSON.CODE
    override fun field2(): Field<String?> = Lesson.LESSON.LESSON_CODE
    override fun field3(): Field<String?> = Lesson.LESSON.SOURCE_CODE
    override fun field4(): Field<String?> = Lesson.LESSON.LABEL
    override fun field5(): Field<Int?> = Lesson.LESSON.SECTION_NUMBER
    override fun field6(): Field<Int?> = Lesson.LESSON.SUBSECTION_NUMBER
    override fun field7(): Field<String?> = Lesson.LESSON.URL
    override fun field8(): Field<String?> = Lesson.LESSON.DESCRIPTION
    override fun component1(): String? = code
    override fun component2(): String? = lessonCode
    override fun component3(): String? = sourceCode
    override fun component4(): String? = label
    override fun component5(): Int? = sectionNumber
    override fun component6(): Int? = subsectionNumber
    override fun component7(): String? = url
    override fun component8(): String? = description
    override fun value1(): String? = code
    override fun value2(): String? = lessonCode
    override fun value3(): String? = sourceCode
    override fun value4(): String? = label
    override fun value5(): Int? = sectionNumber
    override fun value6(): Int? = subsectionNumber
    override fun value7(): String? = url
    override fun value8(): String? = description

    override fun value1(value: String?): LessonRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): LessonRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): LessonRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): LessonRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Int?): LessonRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Int?): LessonRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): LessonRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): LessonRecord {
        set(7, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: Int?, value6: Int?, value7: String?, value8: String?): LessonRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised LessonRecord
     */
    constructor(code: String? = null, lessonCode: String? = null, sourceCode: String? = null, label: String? = null, sectionNumber: Int? = null, subsectionNumber: Int? = null, url: String? = null, description: String? = null): this() {
        this.code = code
        this.lessonCode = lessonCode
        this.sourceCode = sourceCode
        this.label = label
        this.sectionNumber = sectionNumber
        this.subsectionNumber = subsectionNumber
        this.url = url
        this.description = description
        resetChangedOnNotNull()
    }
}
