/*
 * This file is generated by jOOQ.
 */
package net.paploo.goi.persistence.db.goi.vocabulary.tables.records


import net.paploo.goi.persistence.db.goi.vocabulary.tables.ConjugationKind

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ConjugationKindRecord() : UpdatableRecordImpl<ConjugationKindRecord>(ConjugationKind.CONJUGATION_KIND), Record3<String?, String?, String?> {

    open var code: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var label: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var wordClassCode: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<String?, String?, String?> = super.fieldsRow() as Row3<String?, String?, String?>
    override fun valuesRow(): Row3<String?, String?, String?> = super.valuesRow() as Row3<String?, String?, String?>
    override fun field1(): Field<String?> = ConjugationKind.CONJUGATION_KIND.CODE
    override fun field2(): Field<String?> = ConjugationKind.CONJUGATION_KIND.LABEL
    override fun field3(): Field<String?> = ConjugationKind.CONJUGATION_KIND.WORD_CLASS_CODE
    override fun component1(): String? = code
    override fun component2(): String? = label
    override fun component3(): String? = wordClassCode
    override fun value1(): String? = code
    override fun value2(): String? = label
    override fun value3(): String? = wordClassCode

    override fun value1(value: String?): ConjugationKindRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): ConjugationKindRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): ConjugationKindRecord {
        set(2, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?): ConjugationKindRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised ConjugationKindRecord
     */
    constructor(code: String? = null, label: String? = null, wordClassCode: String? = null): this() {
        this.code = code
        this.label = label
        this.wordClassCode = wordClassCode
        resetChangedOnNotNull()
    }
}
