/*
 * This file is generated by jOOQ.
 */
package net.paploo.goi.persistence.db.goi.grammar


import kotlin.collections.List

import net.paploo.goi.persistence.db.goi.DefaultCatalog
import net.paploo.goi.persistence.db.goi.grammar.tables.Example
import net.paploo.goi.persistence.db.goi.grammar.tables.ExampleReference
import net.paploo.goi.persistence.db.goi.grammar.tables.Rule
import net.paploo.goi.persistence.db.goi.grammar.tables.RuleReference

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Grammar : SchemaImpl("grammar", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>grammar</code>
         */
        val GRAMMAR: Grammar = Grammar()
    }

    /**
     * The table <code>grammar.example</code>.
     */
    val EXAMPLE: Example get() = Example.EXAMPLE

    /**
     * The table <code>grammar.example_reference</code>.
     */
    val EXAMPLE_REFERENCE: ExampleReference get() = ExampleReference.EXAMPLE_REFERENCE

    /**
     * The table <code>grammar.rule</code>.
     */
    val RULE: Rule get() = Rule.RULE

    /**
     * The table <code>grammar.rule_reference</code>.
     */
    val RULE_REFERENCE: RuleReference get() = RuleReference.RULE_REFERENCE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Example.EXAMPLE,
        ExampleReference.EXAMPLE_REFERENCE,
        Rule.RULE,
        RuleReference.RULE_REFERENCE
    )
}
