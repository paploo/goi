module Goi
  module SQL
    class VocabularyRecordBuilder

      type record = Hash[Symbol, untyped]

      type record_group = {
          vocabulary: record,
          preferred_definition: record,
          preferred_spelling: record,
          phonetic_spelling: record,
          alt_phonetic_spelling: record,
          kanji_spelling: record,
          conjugation_set: record,
          conjugations: [record],
          references: [record],
          linkages: record
        }

      def build_record_group: (Model::Vocabulary::Linkages linkages) -> record_group

      def build_vocabulary_record: (Model::Vocabulary::Vocabulary vocabulary) -> record

      def build_definition_record: (Model::Vocabulary::Definition definition) -> record

      def build_spelling_record: (Model::Vocabulary::Spelling? spelling) -> record?

      def build_conjugation_set_record: (Model::Vocabulary::ConjugationSet? conjugation_set) -> record?

      def build_conjugation_records: (Model::Vocabulary::ConjugationSet? conjugation_set) -> [record]

      def build_reference_records: (Model::Vocabulary::Vocabulary vocabulary) -> [record]

      def build_linkage_record: (Model::Vocabulary::Linkages linkages) -> record

    end
  end
end