module Goi
  module Exporter
    module Core

    class BaseAnkiExporter < BaseExporter

      def initialize: (config: Config) -> void

      attr_reader config: Config

      def export: (linkages: [Model::Vocabulary::Linkages] linkages) -> void

      private

      def deck: () -> String?

      def note_type: () -> String?

      def header_row: () -> [String]?

      def tags_column_index: () -> Integer?

      def note_id: (linkage: Model::Vocabulary::Linkages) -> String?

      def linkage_rows: (linkages: [Model::Vocabulary::Linkages] linkages) -> [[String?]]

      def linkage_row: (linkage: Model::Vocabulary::Linkages linkage) -> [String?]?

      def to_array_field: ([untyped] array) -> String?

      def humanize_const: (String s) -> String

      def tagize: (String s) -> String

    end

    end
  end
end
