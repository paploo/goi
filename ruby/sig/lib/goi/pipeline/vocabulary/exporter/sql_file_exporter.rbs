module Goi
  module Pipeline
    module Vocabulary
      module Exporter
        class SqlFileExporter < Vocabulary::Exporter::Base

          type db_config = {database: String, user: String, password: String, host: String}

          def initialize: (db_config: db_config db_config, outfile_pathname: Pathname? outfile_pathname) -> void

          attr_reader db_config: db_config

          attr_reader outfile_pathname: Pathname?

          def export: ([Model::Vocabulary::Linkages]) -> untyped

          private

          def db: () -> untyped

          attr_reader record_builder: Vocabulary::RecordBuilder

          def generate_insert_sql: (SQL::VocabularyRecordBuilder::record_group record_group) -> [String]
        end
      end
    end
  end
end
