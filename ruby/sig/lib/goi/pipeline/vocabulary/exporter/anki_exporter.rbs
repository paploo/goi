module Goi
  module Pipeline
    module Vocabulary
      module Exporter

        class BaseAnkiExporter < Vocabulary::Exporter::Base
          def initialize: (outfile_pathname: Pathname? outfile_pathname) -> void

          attr_reader outfile_pathname: Pathname?

          def export: ([Model::Vocabulary::Linkages] linkages) -> void

          private

          def write_file_headers: (IO io) -> void

          def deck: () -> String?

          def note_type: () -> String?

          def tags_column_index: () -> Integer?

          def header_row: () -> [String]?

          def linkage_rows: (linkages: [Model::Vocabulary::Linkages] linkages) -> [[String?]]

          def linkage_row: (linkage: Model::Vocabulary::Linkages linkage) -> [String?]?

          def to_array_field: ([untyped] array) -> String?

          def humanize_const: (String s) -> String

          def tagize: (String s) -> String
        end

        class BaseAnkiVocabExporter < BaseAnkiExporter
          NOTE_ID_HEADER: String

          TAGS_HEADER: String

          VOCABULARY_HEADERS: [String]

          CONJUGATION_HEADERS: [String]

          private

          def note_id_fields: (Model::Vocabulary::Linkages linkage) -> [String]

          def tags_fields: (Model::Vocabulary::Linkages linkage) -> [String]

          def vocabulary_fields: (Model::Vocabulary::Linkages linkage) -> [String?]

          def conjugation_fields: (Model::Vocabulary::ConjugationSet conjugation_set) -> [String?]

          def phonetic_spelling_field: (Model::Vocabulary::Linkages linkage) -> String

          def alt_spelling_field: (Model::Vocabulary::Linkages linkage) -> String?

          def tags_field: (Model::Vocabulary::Vocabulary vocabulary) -> String?
        end

        # Combined exporter that puts out all the data in one row, including all conjugations, for a single deck.
        # This is the default one to use in a pipeline, creating the one big deck.
        class AnkiExporter < BaseAnkiVocabExporter
          private

          def header_row: () -> untyped

          def tags_column_index: () -> untyped

          def note_id: (linkage: untyped linkage) -> untyped

          def linkage_row: (linkage: untyped linkage) -> untyped

          def conjugation_fields_or_empty: (linkage: untyped linkage) -> untyped
        end

      end
    end
  end
end
