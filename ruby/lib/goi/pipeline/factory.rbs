module Goi
  module Pipeline
    class Factory

      type vocabulary_pipeline = Core::Pipeline[[Model::Vocabulary::Linkages]]

      class Config
        type db_config = {database: String, user: String, password: String, host: String}

        def initialize: (db_config: db_config db_config, infile_pathname: Pathname infile_pathname, output_dir_pathname: Pathname? output_dir_pathname) -> void

        attr_reader db_config: db_config

        attr_reader infile_pathname: Pathname

        attr_reader output_dir_pathname: Pathname?
      end

      def initialize: (?config: Config config) -> void

      attr_reader config: Config

      def vocabulary_pipeline: () -> vocabulary_pipeline

      private

      OUTFILE_NAMES: Hash[Symbol, Hash[Symbol, String]]

      def outfile_path: (Pathname output_dir_pathname, Symbol namespace, Symbol key) -> Pathname?

    end
  end
end
